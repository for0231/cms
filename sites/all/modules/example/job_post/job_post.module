<?php
/**
* Implements hook_node_info() to provide our job_post type.
*/
function job_post_node_info() {
return array(
'job_post' => array(
'name' => t('Job Post'),
'base' => 'job_post',
'description' => t('Use this content type to post a job.'),
'has_title' => TRUE,
'title_label' => t('Job Title'),
'help' => t('Enter the job title,
job description, and the name of the company that posted the job'),
),
'job_tail' => array(
'name' => t('Job Tail'),
'base' => 'job_tail',
'description' => t('Use this content type to post a job tail.'),
'has_title' => TRUE,
'title_label' => t('Job Tail Title'),
'help' => t('Enter the job title,
job description, and the name of the company that posted the job'),
),
);
}
/**
* Implements hook_menu_alter().
*/
function job_post_menu_alter(&$callbacks) {
// If the user does not have 'administer nodes' permission,
// disable the job_post menu item by setting its access callback to FALSE.
if (!user_access('administer nodes')) {
$callbacks['node/add/job_post']['access callback'] = FALSE;
// Must unset access arguments or Drupal will use user_access()
// as a default access callback.
unset($callbacks['node/add/job_post']['access arguments']);
}

}

/**
* Implements hook_permission().
*/
function job_post_permission() {
return array(
'create job post' => array(
'title' => t('Create a job post'),
'description' => t('Create a job post'),
),
'edit own job post' => array(
'title' => t('Edit own job post'),
'description' => t('Edit your own job posting'),
),
'edit any job post' => array(
'title' => t('Edit any job post'),
'description' => t('Edit any job posting'),
),
'delete own job post' => array(
'title' => t('Delete own job post'),
'description' => t('Delete own job posting'),
),
'delete any job post' => array(
'title' => t('Delete any job post'),
'description' => t('Delete any job posting'),
),
'create job tail' => array(
  'title' => t('Create a job tail'),
  'description' => t('Create a job tail'),
),
'edit own job tail' => array(
  'title' => t('Edit own job tail'),
  'description' => t('Edit your own job posting'),
),
'edit any job tail' => array(
  'title' => t('Edit any job tail'),
  'description' => t('Edit any job tail'),
),
'delete own job tail' => array(
  'title' => t('Delete own job tail'),
  'description' => t('Delete own job tail'),
),
'delete any job tail' => array(
  'title' => t('Delete any job tail'),
  'description' => t('Delete any job tail'),
),
);
}

/**
 * Implements hook_node_access().
 */
function job_node_access($op, $node, $account) {
  $is_author = $account->uid == $node->uid;
  switch ($op) {
    case 'create': 
      // Allow if user's role has 'create joke' permission.
      if (user_access('create job', $account)) {
        return NODE_ACCESS_ALLOW;
      }
    case 'update':
      if (user_access('edit own job', $account) && $is_author || user_access('edit any job', $account)) {
        return NODE_ACCESS_ALLOW;
      }
    case 'delete':
      if (user_access('delete own job', $account) && $is_author || user_access('delete any job', $account)) {
        return NODE_ACCESS_ALLOW;
      }
  }
}
/**
* Implement hook_form() with the standard default form.
*/
function job_post_form($node, $form_state) {
//return node_content_form($node, $form_state);
  $form = array();
  $type = node_type_get_type($node);
  kpr($type);
  if ($type->has_title) {
    $form['title'] = array(
      '#type' => 'textfield',
      '#title' => check_plain($type->title_label),
      '#required' => TRUE,
      '#default_value' => $node->title,
      '#maxlength' => 255,
      '#weight' => -5,
    );
   $form['body_filter']['self'] = array(
      '#type' => 'textfield',
      '#title' => t('My Picture description'),
      '#required' => TRUE,
      '#weight' => -4,
   );
  }
  kpr($form);
  return $form; 
}

/**
* Implements hook_validate().
*/
function job_post_validate($node) {
// Enforce a minimum character count of 2 on company names.
if (isset($node->job_post_company) &&
strlen($node->job_post_company['und'][0]['value']) < 2) {
form_set_error('job_post_company',
t('The company name is too short. It must be atleast 2
characters.'),
$limit_validation_errors = NULL);
}
}

